push:                         # FCM push server configuration
  queueSize:                                                            # Size of the push pending queue (can be left empty)

minio:                        # private cloud access configuration
  uri: "https://localhost:9000"                                         # Minio URL as seen by the Shadow server
  accessKey: minio_shadow                                               # Minio service access key
  accessSecret: your_service_password                                   # Minio service secret key configured when installing Minio
  region: us-east-1
  attachmentBucket: attachments
  profileBucket: profiles
  debuglogBucket: debuglogs
  serviceBucket: service
  torExitNodeListObject: torbulkexitlist                                # filename 
  torExitNodeListMaxSize: 16777216                                      # default 16MB    
  asnListObject: ip2asn-v4-u32.tsv.gz                                   # filename
  asnListMaxSize: 16777216                                              # default 16MB

accountDatabaseCrawler:       # account database crawler configuration
  chunkSize: 1000                                                       # accounts per run
  chunkIntervalMs:                                                      # time per run, can be left empty
  
scyllaDbMigrationCrawler:     # account migration crawler configuration
  chunkSize: 1000                                                       # accounts per run
  chunkIntervalMs:                                                      # time per run, can be left empty

metricsCluster:               # Redis server configuration for metrics cluster 
  configurationUri: "redis://localhost:6379/"

cacheCluster:                 # Redis server configuration for cache cluster
  configurationUri: "redis://localhost:6379/"

clientPresenceCluster:        # Redis server configuration for client presence cluster
  configurationUri: "redis://localhost:6379/"

directory:                    # Redis server configuration for directory
  url: "redis://localhost:6379"
  replicaUrls:
              - "redis://localhost:6379"                                # dummy (or actual) replication URL(s)

messageCache:                 # Redis server configuration for message store cache
    persistDelayMinutes:                                                # persistence delay in minutes

    cluster:
      configurationUri: "redis://localhost:6379/" 

pushSchedulerCluster:         # Redis server configuration for push scheduler cluster
  configurationUri: "redis://localhost:6379/"                           # fake/unused for now


pubsub:                       # Redis server configuration for publisher/subscriber cluster
     url: "redis://localhost:6379"
     replicaUrls:
              - "redis://localhost:6379"                                # dummy (or actual) replication URL(s)
              
rateLimitersCluster:          # Redis server configuration for rate limiters cluster
  configurationUri: "redis://localhost:6379/"

server:
  applicationConnectors:      # Shadow service configuration
    - type: https                                                       # connection type
      port: 8080                                                        # connection port
      keyStoreType: PKCS12
      keyStorePath: /home/shadow/shadowserver/shadow.p12                # path to the main keystore 
      keyStorePassword: your_main_store_password                        # password to access the main keystore configured when generating credentials 
      validateCerts: true
      trustStorePath: /usr/lib/jvm/jre-11/lib/security/cacerts          # path to the system truststore
      trustStorePassword: changeit                                      # password to access the truststore 
           
  adminConnectors:            # admin web interface configuration
    - type: https                                                       # connection type
      port: 8081                                                        # connection port
      keyStoreType: PKCS12
      keyStorePath: /home/shadow/shadowserver/shadow.p12                # path to the main keystore
      keyStorePassword: your_main_store_password                        # password to access the main keystore configured when generating credentials
      validateCerts: true
      trustStorePath: /usr/lib/jvm/jre-11/lib/security/cacerts          # path to the system truststore
      trustStorePassword: changeit                                      # password to access the truststore
      needClientAuth: true                                              # uncommenting this effectively disables the web admin access

scylla:                       # ScyllaDB access configuration
  region: us-east-1
  endpoint: "http://localhost:8083/"
  accessKey: shadow                                                     # Scylla service access key
  accessSecret: your_scylla_service_password                            # Scylla service secret key configured when installing ScyllaDB
  accountsTableName: accounts
  userLoginTableName: userlogins
  miscTableName: misc
  messagesTableName: messagedb
  keysTableName: keysdb
  pushChallengeTableName: pushchallengedb
  reportMessageTableName: reportmessagedb
  pendingAccountsTableName: pendingaccounts
  pendingDevicesTableName: pendingdevices
  deletedAccountsTableName: deletedaccounts
  groupsTableName: groupsdb
  groupLogsTableName: grouplogsdb  

accountsDatabase:             # Postgres database configuration for accounts database  
  driverClass: org.postgresql.Driver  
  user: shadow                                                          # username of the Postgres user
  password: your_postgres_user_password                                 # password of the Postgres user configured at installation  
  url: "jdbc:postgresql://localhost:5432/accountdb"                     # URL of the accounts database

abuseDatabase:                # Postgres database configuration for abuse database
  driverClass: org.postgresql.Driver
  user: shadow                                                          # username of the Postgres user
  password: your_postgres_user_password                                 # password of the Postgres user configured at installation
  url: "jdbc:postgresql://localhost:5432/abusedb"                       # URL of the abuse database

logging:                      # logging configuration
  level: INFO                 # desired logging level (DEBUG not recommended in production)
  appenders:
    - type: file              # configuration to write logs in file
      currentLogFilename: /var/log/shadow.log                           # location to save the current log file
      archivedLogFilenamePattern: /var/log/shadow-%d.log.gz             # location and pattern to save archived logs
      archivedFileCount: 5                                              # number of archived files to keep
    - type: console           # include this if you want the logs be written to console as well

turn:                         # NAT-T server parameters
  secret: your_turn_secret                                              # shared secret for the TURN authorization (must match the Coturn configuration)
  uris:
   - stun:shadow.example.com:3478                                       # URL of the STUN service (your Coturn server or 3rd party, may add several to the list)
   - turn:shadow.example.com:3478                                       # URL of the TURN service (your Coturn server or 3rd party)

gcm:  
  apiKey: GoogleFCMKey                                                  # the server key of your Firebase project     
  
datadog:                      # Datadog config, not used currently
  apiKey: 12345                                                         # fake/unused
  environment: production
  
apn:                          # this is not used currently 
  sandbox: true 
  keyId: 12345                                                          # fake/unused
  teamId: 12345                                                         # fake/unused
  signingKey: 12345                                                     # fake/unused
  bundleId: 12345                                                       # fake/unused

unidentifiedDelivery:         # unidentified access credentials configuration
  certificate: xxxxx                                                    # server certificate
  privateKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=              # server private key 
  expiresDays: 365                                                      # account certificate validity lifetime in days

recaptcha:
  secret: 123                                                           # fake/unused
  
recaptchaV2:
  scoreFloor: 1                                                         # fake/unused
  projectPath: xxx                                                      # fake/unused
  siteKey: xxx                                                          # fake/unused
  credentialConfigurationJson: xxx                                      # fake/unused  

limits:
  contactQueries:
   bucketSize: 50000
   leakRatePerMinute: 50000

zkConfig:
   serverSecret: xxxx                                                   # server ZK private key   

remoteConfig:
  authorizedTokens:
    - # leave the list empty    
  globalConfig: # keys and values that are given to clients on GET /v1/config
    {} # leave this empty          

paymentsService:  
  userAuthenticationTokenSharedSecret: 6730674e1bd4f3a9cfdb2645159230b1 # fake/unused, hex-encoded 32-byte shared secret
  fixerApiKey: 6730674e1bd4f3a9cfdb2645159230b1                         # if using payments, insert your API key here, otherwise leave this fake value
  fixerPaid: false                                                      # whether your Fixer account is paid or free, leave as is if not using payments
  coinMarketCapApiKey: 6730674e1bd4f3a9cfdb2645159230b2                 # if using payments, insert your API key here, otherwise leave this fake value
  coinMarketCapCurrencyIds:
    MOB: 7878
  paymentCurrencies:                                                    # list of supported cryptocurrencies, only Mobilecoin supported for now 
    - MOB    

storageService:
  userAuthenticationTokenSharedSecret: 6730674e1bd4f3a9cfdb2645159230b1 # fake/unused
  
group:                        # group parameters
  maxGroupSize: 100                                                     # maximum number of users in a group
  maxGroupTitleLengthBytes: 256                                         # maximum length of group title (in bytes)  
  maxGroupDescriptionLengthBytes: 1024                                  # maximum length of group description (in bytes)
  externalServiceSecret: your_group_service_secret_key                  # must be a hex string key

badges:                       # badge settings, unused/dummy config for now
  badges:
    - id: TEST
      mdpi: https://example.com/test-mdpi
      ldpi: https://example.com/test-ldpi
      hdpi: https://example.com/test-hdpi
      xhdpi: https://example.com/test-xhdpi
      xxhdpi: https://example.com/test-xxhdpi
      xxxhdpi: https://example.com/test-xxxhdpi
      lowDetailSvg: https://example.com/test-lds
      highDetailSvg: https://example.com/test-hds
      category: other
  badgeIdsEnabledForAll:
    - TEST

localParametersConfiguration: # locally significant server parameters
 verificationCodeLifetime: 24                                           # account verification code lifetime in hours
 keyStorePath: /home/shadow/shadowserver/auxiliary.keystore             # path to the auxiliary keystore 
 keyStorePassword: your_aux_keystore_password                           # password of the auxiliary keystore configured when generating credentials
 licensePath: /home/shadow/shadowserver/license                         # path to the folder where activation keys will be stored
 accountLifetime: 365                                                   # if an account is not seen in this many days it is considered for expiration
 accountExpirationPolicy: 0                                             # this should be set to 0, 1 or 2. The value of 2 means automatically delete accounts due to expiration, 1 means do not delete but just log, 0 means disable checking for expiration  

serviceConfiguration:         # client-server parameters
 cloudUri: https://shadow.example.com:9000                              # Minio server URL as accessible from the Internet                             
 statusUri: shadowuptime.example.com                                    # offline alarm signaling URL
 storageUri: https://shadow.example.com:8080                            # Shadow server URL as accessible from the Internet
 sfuUri: https://sfu.example.com:8080                                   # SFU (conferencing) server URL as accessible from the Internet   
 unidentifiedDeliveryCaPublicKey: xxxxx                                 # public key of the unidentified access CA 
 serverZkPublic: xxxxx                                                  # server ZK public key
 fcmSenderId: 12345                                                     # the sender ID of your Firebase project 
 certsVersion: 1                                                        # should be 1 if certificate rotation is not used
 supportEmail: shadow@example.com                                       # email address whither debug reports will be sent
 # maxImageSize: 100                                                    # (optional) image attachment size limit (MB)
 # maxAudioSize: 100                                                    # (optional) audio attachment size limit (MB)  
 # maxVideoSize: 100                                                    # (optional) video attachment size limit (MB)
 # maxDocSize: 100                                                      # (optional) document attachment size limit (MB)
 updatesAllowed: true                                                   # whether clients are allowed to update
 paymentsEnabled: true                                                          # whether payments are enabled or not 